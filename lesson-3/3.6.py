"""6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с
прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит
из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func()."""


def my_capitalize(l_case_word: str) -> str:
    """самодельная функция, напоминающая метод .capitalize()"""
    if 97 <= ord(l_case_word[0]) <= 122:
        l_case_word = chr(ord(l_case_word[0]) - 32) + l_case_word[1:]
    # самодельные функции chr и ord не писал. делал бы через список длиной 128 элементов
    return l_case_word


def int_func(word: str) -> str:
    """принимает слово из маленьких латинских букв и возвращает его же, но с прописной первой буквой"""
    return my_capitalize(word)


user_line = input('Введите строку из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем '
                  'регистре: ') + ' '  # + ' ' - чтобы не оставить без соответствующей обработки последний введенный
# пользователем символ. При выводе обрежем.
cap_line = ''  # здесь будем складывать выводную строку
inline_word = ''  # переменная для хранения отдельных слов из строки
for symbol in user_line:  # пробегаем по подстрокам
    inline_word += symbol  # копим отдельные символы в слово
    if symbol == ' ':  # если встретили символ пробела:
        cap_line += int_func(inline_word)  # слово скидываем в выводную строку
        inline_word = ''  # и слово затираем, чтобы накопить заново
print(cap_line[:-1])  # последнего символа (пробела) в исходной строке не было, поэтому обрезаем и выводим результат
